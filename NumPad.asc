// new module script

String currentCode;

function EnterNumber(const string number)
{
  if(currentCode.Length < 4)
  {
    //Play random beep sound.
    switch(Random(3))
    {
      case 0:
        aButtonPress0.Play();
        break;
      case 1:
        aButtonPress1.Play();
        break;
      case 2:
        aButtonPress2.Play();
        break;
      case 3:
        aButtonPress3.Play();
        break;
      default:
        //Error
        break;
    }
    
    currentCode = currentCode.Append(number);
    NumDisplay.Text = currentCode;
    
    if(currentCode.Length == 4)
    {
      EnterButton.NormalGraphic = 16;
      EnterButton.Clickable = true;
    }
  }
}

//Is called everytime the player opens the screen.
function NumPadBeginPuzzle()
{
  //Makes the GUI visible to the player.
  gNumPad.Visible = true;
  
  //Resets the input, so it will reset whenever the player backs out of the puzzle.
  currentCode = "";
  NumDisplay.Text = "";
  
  //Disables the confirm button.
  EnterButton.NormalGraphic = 17;
  EnterButton.Clickable = false;
}

//Is called when the player presses the checkmark button.
function CheckNumPadSolved()
{
  if(currentCode.CompareTo(SOLUTION_CODE) == 0)
  {
    
    //Play a happy sound.
    aNumPadCorrect.Play();
    
    //Flash green
    for(int i = 0; i < 3; i++)
    {
      //Not full green because that would be too bright.
      NumDisplay.TextColor = 1600;
      Wait(15); //Should wait for half a second.
      //This is black.
      NumDisplay.TextColor = 0;
      Wait(15); //Should wait for half a second.
    }
    
    //Close the GUI
    gNumPad.Visible = false;
    
    //Do code for when the puzzle is solved.
    aCatticusUnfreezingSound.Play();
    gNumPad.Visible = false;
    gVictory.Visible = true;
  }
  else
  {
    //Reset the puzzle because the player got it wrong.
    
    //Play a sad sound.
    aNumPadIncorrect.Play();
    
    //Flash red
    for(int i = 0; i < 2; i++)
    {
      //This is full red.
      NumDisplay.TextColor = 63488;
      Wait(15); //Should wait for half a second.
      //This is black.
      NumDisplay.TextColor = 0;
      Wait(15); //Should wait for half a second.
    }
    NumPadBeginPuzzle();
  }
}

//Is called when the player presses the backspace GUI button.
function DeleteNumPadLastNumber()
{
  //Removes the last digit if it's not empty.
  if(currentCode.Length > 0)
  {
    //Play random beep sound.
    switch(Random(3))
    {
      case 0:
        aButtonPress0.Play();
        break;
      case 1:
        aButtonPress1.Play();
        break;
      case 2:
        aButtonPress2.Play();
        break;
      case 3:
        aButtonPress3.Play();
        break;
      default:
        //Error
        break;
    }
    
    //Makes it so the player can't hit the enter button because there's only 3 now.
    if(currentCode.Length == 4)
    {
      EnterButton.NormalGraphic = 17;
      EnterButton.Clickable = false;
    }
    currentCode = currentCode.Truncate(currentCode.Length - 1);
    NumDisplay.Text = currentCode;
  }
}